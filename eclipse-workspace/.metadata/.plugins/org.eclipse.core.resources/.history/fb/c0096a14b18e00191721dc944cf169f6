package com.appcursos.controllers;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.appcursos.models.Event;
import com.appcursos.models.Guest;
import com.appcursos.repository.EventRepository;
import com.appcursos.repository.GuestRepository;

@Controller
public class EventController {
	@Autowired
	public EventRepository eventRep;
	@Autowired
	public GuestRepository guestRep;

	@RequestMapping("/events")
	public ModelAndView listEvents() {
		ModelAndView modAView = new ModelAndView("index");
		Iterable<Event> events = eventRep.findAll();
		modAView.addObject("events", events);
		return modAView;
	}

	@RequestMapping(value = "/registerEvent", method = RequestMethod.GET)
	public String formGet() {
		return "event/formEvent";
	}

	@RequestMapping(value = "/registerEvent", method = RequestMethod.POST)
	public String formPost(@Valid Event pEvent, BindingResult result, RedirectAttributes attributes) {
		if (result.hasErrors()) {
			attributes.addFlashAttribute("message", "Verify the information in the fields!");
			attributes.addFlashAttribute("class", "error-msg");
			return "redirect:/registerEvent";
		}
		eventRep.save(pEvent);
		attributes.addFlashAttribute("message", "Event added with success!");
		attributes.addFlashAttribute("class", "success-msg");
		return "redirect:/registerEvent";
	}

	@RequestMapping(value = "/{idEvent}", method = RequestMethod.GET)
	public ModelAndView detailsEventGet(@PathVariable("idEvent") long idEvent, @Valid Guest guest, BindingResult result,
			RedirectAttributes attributes)
	{
		Event event = eventRep.findByidEvent(idEvent);
		ModelAndView modAView = new ModelAndView("event/detailsEvent");
		modAView.addObject("event", event);

		Iterable<Guest> guests = guestRep.findByEvent(event);
		modAView.addObject("guests", guests);
		return modAView;
	}

	@RequestMapping(value = "/{idEvent}", method = RequestMethod.POST)
	public String detailsEventPost(@PathVariable("idEvent") long idEvent, @Valid Guest guest, BindingResult result,
			RedirectAttributes attributes)
	{
		if (result.hasErrors())
		{
			attributes.addFlashAttribute("messageheader", "Error Alert");
			attributes.addFlashAttribute("message", "Verify the information in the fields!");
			attributes.addFlashAttribute("class", "error-msg");
			return "redirect:/{idEvent}";
		}
		Event event = eventRep.findByidEvent(idEvent);
		guest.setEvent(event);
		guestRep.save(guest);
		attributes.addFlashAttribute("messageheader", "Guest Added");
		attributes.addFlashAttribute("message", "Guest added with success!");
		attributes.addFlashAttribute("class", "success-msg");
		attributes.addFlashAttribute("modal-open", "success");
		return "redirect:/{idEvent}";
	}
}
